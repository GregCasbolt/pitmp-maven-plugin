#!/bin/sh
################################################################################
printUsage()
{
   echo "Usage: $ScriptName [-h | -clean | [-v <version>]]"
}

################################################################################
help()
{
   printUsage

   echo
   echo "Compile, install locally and run automatic tests to verify PitMP plugin."
   echo "Tests are located in the directory:"
   echo "    $testDirName"
   echo "    ├── dhell"
   echo "    └── dnoo"
   echo "Options:"
   echo "-h: this help."
   echo "-clean: clean all files generated by a previous executions."
   echo "-v <version>: version of PitMP to be tested."
   echo "    Default value: the version in the file pom.xml."

   exit 0
}

################################################################################
usage()
{
   printUsage
   exit 1
}

################################################################################
# commandline analysis

ScriptName=`basename "$0"`
currentDir=`pwd`

dirList="dhell dnoo"
testName="verify_pitmp"
traceFile="$currentDir/$testName.traces"
compileFile=$currentDir/$testName"_compile.traces"
testDirName="test_dir"
testDir="$currentDir/$testDirName"
runResFile="$testDir/run_all_tests.res"
refResult="$testDir/$testName.ref"
tmpResFile=$testDir/$testName"_res.$$"
tmpDiffFile=$testDir/$testName"_diff.$$"
pomFile="pom.xml"

execOption="run"
scriptOptions=
while test ! "X$1" = "X"
do
   if test "$1" = "-h"
   then
      help
   elif test "$1" = "-clean"
   then
      execOption="clean"
   else
      scriptOptions="$scriptOptions $1"
   fi
   shift
done

################################################################################

# clean previous trace files
rm -f $traceFile $compileFile $runResFile $testDir/$testName"_diff".* $testDir/$testName"_res".*

if test "$execOption" = "run"
then
   echo "------------------------------------------------------------" 2>&1 | tee -a $traceFile
   echo "- compile and install locally" 2>&1 | tee -a $traceFile
   echo "------------------------------------------------------------" 2>&1 | tee -a $traceFile
   if mvn clean install >> $compileFile 2>&1
   then
      echo "OK" 2>&1 | tee -a $traceFile
      echo "------------------------------------------------------------" 2>&1 | tee -a $traceFile
      echo "- run tests" 2>&1 | tee -a $traceFile
      echo "------------------------------------------------------------" 2>&1 | tee -a $traceFile
      cd $testDir
      ./run_all_tests.sh $scriptOptions >$runResFile 2>&1
   
      # check result
      grep "^########" $runResFile > $tmpResFile
      if diff $tmpResFile $refResult >$tmpDiffFile
      then
         echo "OK" 2>&1 | tee -a $traceFile
         # clean all traces files
         rm -f $traceFile $compileFile $runResFile $testDir/$testName"_diff".* $testDir/$testName"_res".*
         exit 0
      else
         echo "FAILED" 2>&1 | tee -a $traceFile
         echo "-------- results" 2>&1 | tee -a $traceFile
         cat "$tmpResFile" 2>&1 | tee -a $traceFile
         echo "-------- diff" 2>&1 | tee -a $traceFile
         cat "$tmpDiffFile" 2>&1 | tee -a $traceFile
         # remove trace files except the main one
         rm -f $compileFile $runResFile $testDir/$testName"_diff".* $testDir/$testName"_res".*
         exit 1
      fi
   else
      echo "FAILED" 2>&1 | tee -a $traceFile
      echo "-------- traces" 2>&1 | tee -a $traceFile
      cat "$compileFile" 2>&1 | tee -a $traceFile
      # remove trace files except the main one
      rm -f $compileFile $runResFile $testDir/$testName"_diff".* $testDir/$testName"_res".*
      exit 1
   fi
else
   cd $testDir
   ./run_all_tests.sh -clean $scriptOptions
fi
